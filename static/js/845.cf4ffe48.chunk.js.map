{"version":3,"file":"static/js/845.cf4ffe48.chunk.js","mappings":"4JAgBA,IAde,WACb,OACE,SAAC,KAAD,CACEA,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,kBACVC,aAAc,CAAEC,WAAY,OAAQC,YAAa,QACjDC,aAAa,GACbC,SAAS,GAGd,C,2HCqCD,UA7Ca,WACX,IAAQC,GAAYC,EAAAA,EAAAA,IAAU,MAAtBD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,2FACfF,GAAW,GADI,kBAGQG,EAAAA,EAAAA,WAAeT,GAHvB,OAGPG,EAHO,OAIbO,QAAQC,IAAIR,GACZC,EAAUD,GALG,gDAObO,QAAQC,IAAR,MAPa,yBASbL,GAAW,GATE,4EAAH,qDAYdE,GACD,GAAE,CAACR,KAGF,gCACGK,IAAW,SAAC,IAAD,IACXF,IACC,0BACE,eAAIS,UAAWC,EAAAA,EAAAA,KAAf,SACGV,EAAOW,KAAI,SAAAX,GAAM,OAChB,2BACE,qCAAaA,EAAOY,WACpB,uBAAIZ,EAAOa,YAFJb,EAAOc,GADA,QASL,IAAlBd,EAAOe,SACN,eAAIN,UAAWC,EAAAA,EAAAA,UAAf,wDAMP,C,8DC/CKM,EAAU,mCACVC,EAAW,+BAEXC,EAAkB,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAFnB,cACnBI,EADmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOlBC,EAAa,mCAAG,WAAOC,EAAaC,GAApB,uFACGN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,iCAC+CQ,EAD/C,wBAErB,CACEE,OAAQ,CACND,KAAK,GAAD,OAAKA,MALK,cACdL,EADc,yBASbA,EAASC,MATI,2CAAH,wDAYbM,EAAW,mCAAG,WAAM9B,GAAN,uFACKsB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACApB,EADA,oBACmBmB,EADnB,oBADL,cACZI,EADY,yBAIXA,EAASC,MAJE,2CAAH,sDAOXO,EAAU,mCAAG,WAAM/B,GAAN,uFACMsB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACApB,EADA,4BAC2BmB,EAD3B,oBADN,cACXI,EADW,yBAIVA,EAASC,KAAKQ,MAJJ,2CAAH,sDAOVC,EAAU,mCAAG,WAAMjC,GAAN,uFACMsB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACApB,EADA,4BAC2BmB,EAD3B,oBADN,cACXI,EADW,yBAIVA,EAASC,KAAKC,SAJJ,2CAAH,sDAOVhB,EAAM,CACVY,mBAAAA,EACAK,cAAAA,EACAK,WAAAA,EACAD,YAAAA,EACAG,WAAAA,GAGF,K","sources":["components/Loader/Loader.js","components/Review/Review.js","services/api.js"],"sourcesContent":["import { Circles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Circles\n      height=\"50\"\n      width=\"50\"\n      color=\"#d1d1d1\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'services/api';\nimport css from '../../styles/Common.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams(null);\n  const [review, setReview] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const onReview = async () => {\n      setLoading(true);\n      try {\n        const review = await api.findReview(movieId);\n        console.log(review);\n        setReview(review);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    onReview();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {review && (\n        <div>\n          <ul className={css.list}>\n            {review.map(review => (\n              <li key={review.id}>\n                <h3>Author: {review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {review.length === 0 && (\n        <h3 className={css.container}>\n          We don't have any reviews for this movie\n        </h3>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '4327815596da5129cea06268029b0666';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst findTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nconst findByKeyword = async (searchQuery, page) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&include_adult=false`,\n    {\n      params: {\n        page: `${page}`,\n      },\n    }\n  );\n  return response.data;\n};\n\nconst findDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst findActors = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst findReview = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\nconst api = {\n  findTrendingMovies,\n  findByKeyword,\n  findActors,\n  findDetails,\n  findReview,\n};\n\nexport default api;\n"],"names":["height","width","color","ariaLabel","wrapperStyle","marginLeft","marginRight","wrapperClass","visible","movieId","useParams","useState","review","setReview","loading","setLoading","useEffect","onReview","api","console","log","className","css","map","author","content","id","length","API_KEY","BASE_URL","findTrendingMovies","axios","response","data","results","findByKeyword","searchQuery","page","params","findDetails","findActors","cast","findReview"],"sourceRoot":""}