{"version":3,"file":"static/js/166.f2389bdb.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/Movies/Movies.js","components/TrendingList/TrendingList.js","services/api.js"],"sourcesContent":["import { Circles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Circles\n      height=\"50\"\n      width=\"50\"\n      color=\"#d1d1d1\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import Loader from 'components/Loader/Loader';\nimport TrendingList from 'components/TrendingList/TrendingList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport api from 'services/api';\nimport css from '../../styles/Common.module.css';\n\nconst Movies = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const queryMovie = searchParams.get('query');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: event.target.elements.query.value.toLowerCase() });\n  };\n\n  useEffect(() => {\n    if (queryMovie) {\n      const onSearch = async () => {\n        setLoading(true);\n        try {\n          const searchFilms = await api.findByKeyword(queryMovie);\n          setSearchFilms(searchFilms.results);\n          if (searchFilms.results.length === 0) {\n            alert('Oh-no!');\n          }\n        } catch (err) {\n          console.log(err);\n        } finally {\n          setLoading(false);\n        }\n      };\n      onSearch();\n    }\n  }, [queryMovie]);\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Movie...\"\n          autoFocus\n        />\n        <button className={css.btn} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {loading && <Loader />}\n      {searchFilms && <TrendingList films={searchFilms} />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import { Link, useLocation } from 'react-router-dom';\nimport css from '../../styles/Common.module.css';\n\nconst TrendingList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.list}>\n      {films.map(f => (\n        <li key={f.id}>\n          <Link\n            className={css.item}\n            to={`/movies/${f.id}`}\n            state={{ from: location }}\n          >\n            {f.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TrendingList;\n","import axios from 'axios';\n\nconst API_KEY = '4327815596da5129cea06268029b0666';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst findTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nconst findByKeyword = async (searchQuery, page) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&include_adult=false`,\n    {\n      params: {\n        page: `${page}`,\n      },\n    }\n  );\n  return response.data;\n};\n\nconst findDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst findActors = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst findReview = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\nconst api = {\n  findTrendingMovies,\n  findByKeyword,\n  findActors,\n  findDetails,\n  findReview,\n};\n\nexport default api;\n"],"names":["height","width","color","ariaLabel","wrapperStyle","marginLeft","marginRight","wrapperClass","visible","useState","searchFilms","setSearchFilms","loading","setLoading","useSearchParams","searchParams","setSearchParams","queryMovie","get","useEffect","onSearch","api","results","length","alert","console","log","onSubmit","event","preventDefault","query","target","elements","value","toLowerCase","className","css","type","name","placeholder","autoFocus","films","location","useLocation","map","f","to","id","state","from","title","API_KEY","BASE_URL","findTrendingMovies","axios","response","data","findByKeyword","searchQuery","page","params","findDetails","movieId","findActors","cast","findReview"],"sourceRoot":""}