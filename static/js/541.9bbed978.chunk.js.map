{"version":3,"file":"static/js/541.9bbed978.chunk.js","mappings":"2OAiDA,UA3Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,2FACfF,GAAW,GADI,kBAGQG,EAAAA,EAAAA,WAAeT,GAHvB,OAGPG,EAHO,OAIbO,QAAQC,IAAIR,GACZC,EAAUD,GALG,gDAObO,QAAQC,IAAR,MAPa,yBASbL,GAAW,GATE,4EAAH,qDAYdE,GACD,GAAE,CAACR,KAGF,2BACGK,IAAW,SAAC,IAAD,IACXF,IACC,eAAIS,UAAWC,EAAAA,EAAAA,KAAf,SACGV,EAAOW,KAAI,SAAAC,GAAK,OACf,gBAAIH,UAAWC,EAAAA,EAAAA,KAAf,WACE,gBACEG,MAAM,QACNC,IAAK,kCAAoCF,EAAMG,aAC/CC,IAAKJ,EAAMK,iBAEb,uBAAIL,EAAMM,QACV,uCAAeN,EAAMO,eAPOP,EAAMQ,GADrB,QAe1B,C,4CC5BD,IAjBe,WACb,OACE,SAAC,KAAD,CACEC,OAAO,KACPR,MAAM,KACNS,MAAM,UACNC,UAAU,kBACVC,aAAc,CACZC,QAAS,OACTC,eAAgB,UAElBC,aAAa,GACbC,SAAS,GAGd,C,8DCfKC,EAAU,mCACVC,EAAW,+BAEXC,EAAkB,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAFnB,cACnBI,EADmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOlBC,EAAa,mCAAG,WAAOC,EAAaC,GAApB,uFACGN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,iCAC+CQ,EAD/C,wBAErB,CACEE,OAAQ,CACND,KAAK,GAAD,OAAKA,MALK,cACdL,EADc,yBASbA,EAASC,MATI,2CAAH,wDAYbM,EAAW,mCAAG,WAAM3C,GAAN,uFACKmC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAjC,EADA,oBACmBgC,EADnB,oBADL,cACZI,EADY,yBAIXA,EAASC,MAJE,2CAAH,sDAOXO,EAAU,mCAAG,WAAM5C,GAAN,uFACMmC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAjC,EADA,4BAC2BgC,EAD3B,oBADN,cACXI,EADW,yBAIVA,EAASC,KAAKQ,MAJJ,2CAAH,sDAOVC,EAAU,mCAAG,WAAM9C,GAAN,uFACMmC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAjC,EADA,4BAC2BgC,EAD3B,oBADN,cACXI,EADW,yBAIVA,EAASC,KAAKC,SAJJ,2CAAH,sDAOV7B,EAAM,CACVyB,mBAAAA,EACAK,cAAAA,EACAK,WAAAA,EACAD,YAAAA,EACAG,WAAAA,GAGF,K","sources":["components/Cast/Cast.js","components/Loader/Loader.js","services/api.js"],"sourcesContent":["import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'services/api';\nimport css from '../../styles/Common.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const onActors = async () => {\n      setLoading(true);\n      try {\n        const actors = await api.findActors(movieId);\n        console.log(actors);\n        setActors(actors);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    onActors();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {actors && (\n        <ul className={css.list}>\n          {actors.map(actor => (\n            <li className={css.cast} key={actor.id}>\n              <img\n                width=\"100px\"\n                src={'https://image.tmdb.org/t/p/w500' + actor.profile_path}\n                alt={actor.original_name}\n              />\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import { Circles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Circles\n      height=\"50\"\n      width=\"50\"\n      color=\"#d1d1d1\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nconst API_KEY = '4327815596da5129cea06268029b0666';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst findTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nconst findByKeyword = async (searchQuery, page) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&include_adult=false`,\n    {\n      params: {\n        page: `${page}`,\n      },\n    }\n  );\n  return response.data;\n};\n\nconst findDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst findActors = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst findReview = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\nconst api = {\n  findTrendingMovies,\n  findByKeyword,\n  findActors,\n  findDetails,\n  findReview,\n};\n\nexport default api;\n"],"names":["movieId","useParams","useState","actors","setActors","loading","setLoading","useEffect","onActors","api","console","log","className","css","map","actor","width","src","profile_path","alt","original_name","name","character","id","height","color","ariaLabel","wrapperStyle","display","justifyContent","wrapperClass","visible","API_KEY","BASE_URL","findTrendingMovies","axios","response","data","results","findByKeyword","searchQuery","page","params","findDetails","findActors","cast","findReview"],"sourceRoot":""}