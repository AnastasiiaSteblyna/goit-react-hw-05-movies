{"version":3,"file":"static/js/174.83f74f50.chunk.js","mappings":"6OAEMA,EAAU,mCACVC,EAAW,+BAEXC,EAAkB,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAFnB,cACnBI,EADmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOlBC,EAAa,mCAAG,WAAOC,EAAaC,GAApB,uFACGN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,iCAC+CQ,EAD/C,wBAErB,CACEE,OAAQ,CACND,KAAK,GAAD,OAAKA,MALK,cACdL,EADc,yBASbA,EAASC,MATI,2CAAH,wDAYbM,EAAW,mCAAG,WAAMC,GAAN,uFACKT,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAW,EADA,oBACmBZ,EADnB,oBADL,cACZI,EADY,yBAIXA,EAASC,MAJE,2CAAH,sDAOXQ,EAAU,mCAAG,WAAMD,GAAN,uFACMT,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAW,EADA,4BAC2BZ,EAD3B,oBADN,cACXI,EADW,yBAIVA,EAASC,KAAKS,MAJJ,2CAAH,sDAOVC,EAAU,mCAAG,WAAMH,GAAN,uFACMT,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAW,EADA,4BAC2BZ,EAD3B,oBADN,cACXI,EADW,yBAIVA,EAASC,KAAKC,SAJJ,2CAAH,sDAehB,EARY,CACVJ,mBAAAA,EACAK,cAAAA,EACAM,WAAAA,EACAF,YAAAA,EACAI,WAAAA,G,kBClCF,EAde,WACb,OACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,kBACVC,aAAc,CAAEC,WAAY,OAAQC,YAAa,QACjDC,aAAa,GACbC,SAAS,GAGd,E,iBCGD,EAfqB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAMG,KAAI,SAAAC,GAAC,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAEE,IAAMC,MAAO,CAAEC,KAAMP,GAA5C,SACGG,EAAEK,SAFEL,EAAEE,GADD,KASjB,ECmBD,EA7Ba,WACX,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOV,EAAP,KAAcW,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBF,GAAW,GADM,kBAGaG,EAAAA,qBAHb,OAGTC,EAHS,OAIfN,EAASM,GACTC,QAAQC,IAAIF,GALG,gDAOfC,QAAQC,IAAR,MAPe,yBASfN,GAAW,GATI,4EAAH,qDAYhBE,GACD,GAAE,KAGD,6BACE,4CACCH,IAAW,SAAC,EAAD,IACXZ,IAAS,SAAC,EAAD,CAAcA,MAAOA,MAGpC,C","sources":["services/api.js","components/Loader/Loader.js","components/TrendingList/TrendingList.js","components/Home/Home.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '4327815596da5129cea06268029b0666';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst findTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nconst findByKeyword = async (searchQuery, page) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&include_adult=false`,\n    {\n      params: {\n        page: `${page}`,\n      },\n    }\n  );\n  return response.data;\n};\n\nconst findDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst findActors = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst findReview = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\nconst api = {\n  findTrendingMovies,\n  findByKeyword,\n  findActors,\n  findDetails,\n  findReview,\n};\n\nexport default api;\n","import { Circles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Circles\n      height=\"100\"\n      width=\"100\"\n      color=\"#d1d1d1\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst TrendingList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {films.map(f => (\n        <li key={f.id}>\n          <Link to={`/movies/${f.id}`} state={{ from: location }}>\n            {f.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TrendingList;\n","import React, { useState, useEffect } from 'react';\nimport api from 'services/api';\nimport Loader from '../Loader/Loader';\nimport TrendingList from '../TrendingList/TrendingList';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      setLoading(true);\n      try {\n        const trendingFilms = await api.findTrendingMovies();\n        setFilms(trendingFilms);\n        console.log(trendingFilms);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFilms();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today:</h1>\n      {loading && <Loader />}\n      {films && <TrendingList films={films} />}\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","BASE_URL","findTrendingMovies","axios","response","data","results","findByKeyword","searchQuery","page","params","findDetails","movieId","findActors","cast","findReview","height","width","color","ariaLabel","wrapperStyle","marginLeft","marginRight","wrapperClass","visible","films","location","useLocation","map","f","to","id","state","from","title","useState","setFilms","loading","setLoading","useEffect","fetchFilms","api","trendingFilms","console","log"],"sourceRoot":""}