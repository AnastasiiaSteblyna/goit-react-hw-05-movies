{"version":3,"file":"static/js/354.f3ca7255.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/MovieDetails/MovieDetails.js","services/api.js"],"sourcesContent":["import { Circles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Circles\n      height=\"50\"\n      width=\"50\"\n      color=\"#d1d1d1\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import { useLocation, useParams, Link, Outlet } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport api from 'services/api';\nimport css from '../../styles/Common.module.css';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const onMovieLoaded = async () => {\n      setLoading(true);\n      try {\n        const movie = await api.findDetails(movieId);\n        setMovieInfo(movie);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    onMovieLoaded();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/movies'}>\n        <button className={css.btn_go} type=\"button\">\n          {'<= Go back'}\n        </button>\n      </Link>\n      {loading && <Loader />}\n      {movieInfo && (\n        <div className={css.container}>\n          <img\n            width=\"300px\"\n            src={'https://image.tmdb.org/t/p/w500' + movieInfo.poster_path}\n            alt={movieInfo.original_title}\n          />\n          <div>\n            <h1>\n              {movieInfo.title} ({movieInfo.release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {movieInfo.popularity}</p>\n            <h2>Overview</h2>\n            <p>{movieInfo.overview}</p>\n            <h2>Genres</h2>\n            <ul className={css.list}>\n              {movieInfo.genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n\n      <div className={css.container}>\n        <h2>Additional information</h2>\n        <ul className={css.list}>\n          <li>\n            <Link className={css.item} to=\"cast\">\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link className={css.item} to=\"review\">\n              Review\n            </Link>\n          </li>\n        </ul>\n\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '4327815596da5129cea06268029b0666';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst findTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nconst findByKeyword = async (searchQuery, page) => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&include_adult=false`,\n    {\n      params: {\n        page: `${page}`,\n      },\n    }\n  );\n  return response.data;\n};\n\nconst findDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst findActors = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst findReview = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\nconst api = {\n  findTrendingMovies,\n  findByKeyword,\n  findActors,\n  findDetails,\n  findReview,\n};\n\nexport default api;\n"],"names":["height","width","color","ariaLabel","wrapperStyle","marginLeft","marginRight","wrapperClass","visible","movieId","useParams","useState","movieInfo","setMovieInfo","loading","setLoading","location","useLocation","useEffect","onMovieLoaded","api","movie","console","log","to","state","from","className","css","type","src","poster_path","alt","original_title","title","release_date","slice","popularity","overview","genres","map","genre","name","id","API_KEY","BASE_URL","findTrendingMovies","axios","response","data","results","findByKeyword","searchQuery","page","params","findDetails","findActors","cast","findReview"],"sourceRoot":""}